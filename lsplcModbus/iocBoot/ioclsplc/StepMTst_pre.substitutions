# These are the Digital Coil inputs with StepMTst
file "../../db/bi_bit.template" { pattern
{P,           R,         PORT,             OFFSET,   ZNAM,   ONAM,  ZSV,       OSV,    SCAN}
{STEP:,    CInB0,     Step_Motor_CIn_Bit,     0,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB1,     Step_Motor_CIn_Bit,     1,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB2,     Step_Motor_CIn_Bit,     2,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB3,     Step_Motor_CIn_Bit,     3,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB4,     Step_Motor_CIn_Bit,     4,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB5,     Step_Motor_CIn_Bit,     5,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB6,     Step_Motor_CIn_Bit,     6,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB7,     Step_Motor_CIn_Bit,     7,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}}

file "../../db/bo_bit.template" { pattern
{P,        R,		   PORT,              OFFSET,   ZNAM,   ONAM}
{STEP:,    COutB0,     Step_Motor_BOut,     0,        Low,    High}
{STEP:,    COutB1,     Step_Motor_BOut,     1,        Low,    High}
{STEP:,    COutB2,     Step_Motor_BOut,     2,        Low,    High}
{STEP:,    COutB3,     Step_Motor_BOut,     3,        Low,    High}
{STEP:,    COutB4,     Step_Motor_BOut,     4,        Low,    High}
{STEP:,    COutB5,     Step_Motor_BOut,     5,        Low,    High}
{STEP:,    COutB6,     Step_Motor_BOut,     6,        Low,    High}
{STEP:,    COutB7,     Step_Motor_BOut,     7,        Low,    High}
{STEP:,    COutB8,     Step_Motor_BOut,     8,        Low,    High}
{STEP:,    COutB9,     Step_Motor_BOut,     9,        Low,    High}
{STEP:,    COutB10,     Step_Motor_BOut,     10,        Low,    High}
{STEP:,    COutB11,     Step_Motor_BOut,     11,        Low,    High}
{STEP:,    COutB12,     Step_Motor_BOut,     12,        Low,    High}
{STEP:,    COutB13,     Step_Motor_BOut,     13,        Low,    High}
{STEP:,    COutB14,     Step_Motor_BOut,     14,        Low,    High}
{STEP:,    COutB15,     Step_Motor_BOut,     15,        Low,    High}
}
    

## file "../../db/bi_word.template" { pattern
## {P,           R,         PORT,         OFFSET,     MASK,     ZNAM,    ONAM,  ZSV,       OSV,    SCAN}
## {STEP:,    WIn0,     Step_Motor_WIn,     0,        0x0001,    Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
## {STEP:,    WIn1,     Step_Motor_WIn,     0,        0x0002,    Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
## {STEP:,    WIn2,     Step_Motor_WIn,     0,        0x0004,    Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
## {STEP:,    WIn3,     Step_Motor_WIn,     0,        0x0008,    Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
## {STEP:,    WIn4,     Step_Motor_WIn,     0,        0x0010,    Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
## {STEP:,    WIn5,     Step_Motor_WIn,     0,        0x0020,    Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
## {STEP:,    WIn6,     Step_Motor_WIn,     0,        0x0040,    Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
## {STEP:,    WIn7,     Step_Motor_WIn,     0,        0x0080,    Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
## }

##file "../../db/bo_word.template" { pattern
##{P,           R,          PORT,               OFFSET,   MASK,      ZNAM,   ONAM}
##{STEP:,    DOutW0,     Step_Motor_WOut,     0,        0x0001,    Low,    High}
##{STEP:,    DOutW1,     Step_Motor_WOut,     0,        0x0002,    Low,    High}
##{STEP:,    DOutW2,     Step_Motor_WOut,     0,        0x0004,    Low,    High}
##{STEP:,    DOutW3,     Step_Motor_WOut,     0,        0x0008,    Low,    High}
##{STEP:,    DOutW4,     Step_Motor_WOut,     0,        0x0010,    Low,    High}
##{STEP:,    DOutW5,     Step_Motor_WOut,     0,        0x0020,    Low,    High}
##{STEP:,    DOutW6,     Step_Motor_WOut,     0,        0x0040,    Low,    High}
##{STEP:,    DOutW7,     Step_Motor_WOut,     0,        0x0080,    Low,    High}
##}


# These are the A0 outputs done with word access.
file "../../db/longoutInt32.template" { pattern
{P,           R,               PORT,            OFFSET,   DATA_TYPE}
{STEP:,    AOutA0,           Step_Motor_AOut,    0,       UINT16}
{STEP:,    AOutA1,           Step_Motor_AOut,    1,       UINT16}
{STEP:,    AOutA2,           Step_Motor_AOut,    2,       UINT16}
{STEP:,    AOutA3,           Step_Motor_AOut,    3,       UINT16}
{STEP:,    AOutA4,           Step_Motor_AOut,    4,       UINT16}
{STEP:,    AOutA5,           Step_Motor_AOut,    5,       UINT16}
{STEP:,    AOutA6,           Step_Motor_AOut,    6,       UINT16}
{STEP:,    AOutA7,           Step_Motor_AOut,    7,       UINT16}
{STEP:,    AOutA8,           Step_Motor_AOut,    8,       UINT16}
{STEP:,    AOutA9,           Step_Motor_AOut,    9,       UINT16}
}

# These are the A0 inputs done with word access
file "../../db/longinInt32.template" { pattern
{P,           R,                PORT,          OFFSET,   DATA_TYPE,         SCAN}
{STEP:,    AInA0,            Step_Motor_AIn,     10,       UINT16,    "I/O Intr"}
{STEP:,    AInA1,            Step_Motor_AIn,     11,       UINT16,    "I/O Intr"}
{STEP:,    AInA2,            Step_Motor_AIn,     12,       UINT16,    "I/O Intr"}
{STEP:,    AInA3,            Step_Motor_AIn,     13,       UINT16,    "I/O Intr"}
{STEP:,    AInA4,            Step_Motor_AIn,     14,       UINT16,    "I/O Intr"}
{STEP:,    AInA5,            Step_Motor_AIn,     15,       UINT16,    "I/O Intr"}
{STEP:,    AInA6,            Step_Motor_AIn,     16,       UINT16,    "I/O Intr"}
{STEP:,    AInA7,            Step_Motor_AIn,     17,       UINT16,    "I/O Intr"}
{STEP:,    AInA8,            Step_Motor_AIn,     18,       UINT16,    "I/O Intr"}
{STEP:,    AInA9,            Step_Motor_AIn,     19,       UINT16,    "I/O Intr"}
}

file "../../db/aoFloat64.template" { pattern
{P,           R,               PORT,      OFFSET,   DATA_TYPE,    LOPR, HOPR, PREC}
{STEP:,    FOutF0,        Step_Motor_FOut,   0,    FLOAT32_LE,   -1e6,  1e6,    6}
{STEP:,    FOutF1,        Step_Motor_FOut,   2,    FLOAT32_LE,   -1e6,  1e6,    6}
{STEP:,    FOutF2,        Step_Motor_FOut,   4,    FLOAT64_LE,   -1e6,  1e6,    6}
{STEP:,    FOutF3,        Step_Motor_FOut,   8,    FLOAT64_LE,   -1e6,  1e6,    6}
}

file "../../db/aiFloat64.template" { pattern
{P,           R,               PORT,      OFFSET,   DATA_TYPE,    LOPR, HOPR, PREC  SCAN}
{STEP:,    FInF0,        Step_Motor_FIn,   20,    FLOAT32_LE,   -1e6,  1e6,    6   "I/O Intr"}
{STEP:,    FInF1,        Step_Motor_FIn,   22,    FLOAT32_LE,   -1e6,  1e6,    6   "I/O Intr"}
{STEP:,    FInF2,        Step_Motor_FIn,   24,    FLOAT64_LE,   -1e6,  1e6,    6   "I/O Intr"}
{STEP:,    FInF3,        Step_Motor_FIn,   26,    FLOAT64_LE,   -1e6,  1e6,    6   "I/O Intr"}
}
