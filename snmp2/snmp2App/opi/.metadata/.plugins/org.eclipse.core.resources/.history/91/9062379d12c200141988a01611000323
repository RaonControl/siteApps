importPackage(Packages.org.csstudio.opibuilder.scriptUtil);

var status = PVUtil.getString(pvs[0]);

if(status = "80 outputOn(0)") {
widget.setPropertyValue("on_color",ColorFontUtil.getColorFromRGB(255,255,0));

} else if (status = "80 outputInhibit(1)") {

} else if (status = "80 outputFailureMinSenseVoltage(2)") {


} else if (status = "80 outputFailureMaxSenseVoltage(3)") {


} else if (status = "80 outputFailureMaxTerminalVoltage(4)") {


} else if (status = "80 outputFailureMaxCurrent(5)") {


} else if (status = "80 outputFailureMaxTemperature(6)") {


} else if (status = "80 outputFailureMaxPower(7)") {


} else if (status = "80 outputFailureTimeout(9)") {


} else if (status = "80 outputCurrentLimited(10)") {


} else if (status = "80 outputRampUp(11)") {


} else if (status = "80 outputRampDown(12)") {


} else if (status = "80 outputEnableKill(13)") {


} else if (status = "80 outputEmergencyOff(14)") {


} else if (status = "80 outputAdjusting(15)") {


} else if (status = "80 outputConstantVoltage(16)") {



} else if (status = "80 outputVoltageBoundsExceeded(17)") {


} else if (status = "80 outputCurrentBoundsExceeded(18)") {


} else {

}