#
#

@writetimeout { disconnect; }
@replytimeout { disconnect; }
@readtimeout  { disconnect; }
@mismatch     { disconnect; }

ReplyTimeout = 3000;
InTerminator = "\r";
OutTerminator = "\r";
Terminator = CR LF;

getIDN {    
    ExtraInput = Ignore;
    out "*IDN?";
    in "%\$1[^\r\n]";
}

cmd {
    out "\$1";
}


getF {
    ExtraInput = Ignore;
    out "\$1?";
    in "%f";
}

setF {
    out "\$1 %f";
#    @init { out "\$1?"; in "%f"; }
    @init { getF; }
}

getD {
    ExtraInput = Ignore;
    out "\$1?";
    in "%d";
}


setD {
    out "\$1 %d";
#    @init { out "\$1?"; in "%d"; }
    @init { getD; }
}


setLocRem {
    out "SYST:%{LOC|REM}";
}



getCurrentRange {    
    ExtraInput = Ignore;
    out "CURR:RANG?";
    in "%*[^E]E-%d";
}

setCurrentRange {
    out "CURR:RANG 2E-%d";
#    @init { out "CURR:RANG?"; in "%*[^E]E-%d"; }
    @init { getCurrentRange; }
}


# stringin
getFunc {
    ExtraInput = Ignore;
    out "FUNC?";
    in  "%s";
}

# stringout
setFunc {
    out "FUNC \'%s\'";
}

# stringin
getError {
    ExtraInput = Ignore;
    out "SYST:ERR?";
    in  "%\$1[^\r\n]";
#    in "%#s";
}



measureCurrent {
    ReplyTimeout = 5000;
    out "READ?";
    in "%f";
    ExtraInput = Ignore;
}




getLineF {    
    out "SYST:LFR?";
    in "%d";
}

setLineF {
    out "SYST:LFR %d";
#    @init { out "CURR:RANG?"; in "%*[^E]E-%d"; }
    @init { getLineF; }
}
